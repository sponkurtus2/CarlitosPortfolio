---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Gallery">
        <main>
                <h1>Gallery</h1>

                <div class="gallery-grid">
                        {[1,10,2,8,5,4,3,9,7,6].map((num) => (
                                <div class="gallery-item" data-image={num}>
                                        <img 
                                                src={`/galery/g${num}.${num === 10 ? 'jpg' : 'jpeg'}`} 
                                                alt="Gallery image" 
                                                loading="lazy"
                                        />
                                </div>
                        ))}
                </div>

                <div class="image-viewer" id="imageViewer">
                        <button class="nav-btn prev" id="prevBtn">←</button>
                        <img id="viewerImage" src="" alt="Full size image" />
                        <button class="nav-btn next" id="nextBtn">→</button>
                        <button class="close-btn" id="closeBtn">×</button>
                </div>
        </main>
</Layout>

<style>
        main {
                margin: 0 auto;
                padding: 1rem;
                max-width: 1400px;
                width: 95%;
        }

        h1 {
                font-size: 2rem;
                font-weight: 300;
                margin: 1rem 0 2rem;
                text-align: center;
        }

        .gallery-grid {
                display: grid;
                grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
                gap: 0.75rem;
        }

        .gallery-item {
                cursor: pointer;
                aspect-ratio: 1;
                overflow: hidden;
        }

        .gallery-item img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                transition: transform 0.3s ease;
        }

        .gallery-item:hover img {
                transform: scale(1.05);
        }

        .image-viewer {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(0, 0, 0, 0.9);
                backdrop-filter: blur(8px);
                display: none;
                place-items: center;
                z-index: 1000;
        }

        .image-viewer img {
                max-height: 90vh;
                max-width: 90vw;
                object-fit: contain;
        }

        .nav-btn {
                position: absolute;
                top: 50%;
                transform: translateY(-50%);
                background: none;
                border: none;
                color: white;
                font-size: 2rem;
                cursor: pointer;
                padding: 1rem;
                opacity: 0.7;
                transition: opacity 0.3s;
        }

        .nav-btn:hover {
                opacity: 1;
        }

        .prev { left: 1rem; }
        .next { right: 1rem; }

        .close-btn {
                position: absolute;
                top: 1rem;
                right: 1rem;
                background: none;
                border: none;
                color: white;
                font-size: 2rem;
                cursor: pointer;
                opacity: 0.7;
                transition: opacity 0.3s;
        }

        .close-btn:hover {
                opacity: 1;
        }

        @media (max-width: 768px) {
                .gallery-grid {
                        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
                        gap: 0.5rem;
                }
        }
</style>

<script>
        let currentImageIndex = 0;
        const images = [1,10,2,8,5,4,3,9,7,6];
        
        // Get all gallery items and add click listeners
        const galleryItems = document.querySelectorAll('.gallery-item');
        galleryItems.forEach(item => {
                item.addEventListener('click', () => {
                        const num = parseInt(item.dataset.image);
                        openImage(num);
                });
        });

        // Get viewer elements
        const viewer = document.getElementById('imageViewer');
        const viewerImg = document.getElementById('viewerImage') as HTMLImageElement;
        const prevBtn = document.getElementById('prevBtn');
        const nextBtn = document.getElementById('nextBtn');
        const closeBtn = document.getElementById('closeBtn');
        
        function openImage(num: number) {
                currentImageIndex = images.indexOf(num);
                viewerImg.src = `/galery/g${num}.${num === 10 ? 'jpg' : 'jpeg'}`;
                viewer!.style.display = 'grid';
                document.body.style.overflow = 'hidden';
        }

        function closeViewer() {
                viewer!.style.display = 'none';
                document.body.style.overflow = 'auto';
        }

        function navigate(direction: number) {
                currentImageIndex = (currentImageIndex + direction + images.length) % images.length;
                const num = images[currentImageIndex];
                viewerImg.src = `/galery/g${num}.${num === 10 ? 'jpg' : 'jpeg'}`;
        }

        // Add event listeners
        prevBtn?.addEventListener('click', () => navigate(-1));
        nextBtn?.addEventListener('click', () => navigate(1));
        closeBtn?.addEventListener('click', closeViewer);

        // Close viewer with Escape key and handle arrow keys
        document.addEventListener('keydown', (e) => {
                if (e.key === 'Escape') closeViewer();
                if (e.key === 'ArrowLeft') navigate(-1);
                if (e.key === 'ArrowRight') navigate(1);
        });
</script>
